//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31057947
// Cuda compilation tools, release 11.6, V11.6.124
// Based on NVVM 7.0.1
//

.version 7.6
.target sm_50
.address_size 64

	// .globl	__raygen__rg
.const .align 8 .b8 params[152];

.visible .entry __raygen__rg()
{
	.reg .f32 	%f<20>;
	.reg .b32 	%r<110>;
	.reg .b64 	%rd<14>;
	.loc	1 188 0


	.loc	1 191 20
	.loc	2 4665 5, function_name $L__info_string0, inlined_at 1 191 20
	// begin inline asm
	call (%r1), _optix_get_launch_index_x, ();
	// end inline asm
	.loc	1 196 2
	ld.const.u64 	%rd1, [params];
	ld.const.u64 	%rd2, [params+8];
	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.u32 	%rd4, %r1, 32;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	ld.global.f32 	%f2, [%rd5+4];
	ld.global.f32 	%f3, [%rd5+8];
	ld.global.f32 	%f4, [%rd5+16];
	ld.global.f32 	%f5, [%rd5+20];
	ld.global.f32 	%f6, [%rd5+24];
	ld.global.f32 	%f7, [%rd5+12];
	ld.global.f32 	%f8, [%rd5+28];
	.loc	1 196 2
	.loc	2 221 5, function_name $L__info_string1, inlined_at 1 196 2
	mov.f32 	%f9, 0f00000000;
	mov.u32 	%r40, 255;
	mov.u32 	%r43, 1;
	mov.u32 	%r44, 0;
	mov.u32 	%r45, 4;
	// begin inline asm
	call(%r7,%r8,%r9,%r10,%r11,%r12,%r13,%r14,%r15,%r16,%r17,%r18,%r19,%r20,%r21,%r22,%r23,%r24,%r25,%r26,%r27,%r28,%r29,%r30,%r31,%r32,%r33,%r34,%r35,%r36,%r37,%r38),_optix_trace_typed_32,(%r44,%rd1,%f1,%f2,%f3,%f4,%f5,%f6,%f7,%f8,%f9,%r40,%r44,%r44,%r43,%r44,%r45,%r78,%r79,%r80,%r81,%r82,%r83,%r84,%r85,%r86,%r87,%r88,%r89,%r90,%r91,%r92,%r93,%r94,%r95,%r96,%r97,%r98,%r99,%r100,%r101,%r102,%r103,%r104,%r105,%r106,%r107,%r108,%r109);
	// end inline asm
	.loc	1 213 2
	ld.const.u64 	%rd6, [params+16];
	cvta.to.global.u64 	%rd7, %rd6;
	.loc	1 213 53
	.loc	3 137 10, function_name $L__info_string2, inlined_at 1 213 53
	mov.b32 	%f10, %r7;
	.loc	1 213 26
	.loc	4 460 3, function_name $L__info_string3, inlined_at 1 213 26
	ld.global.f32 	%f11, [%rd5+16];
	ld.global.f32 	%f12, [%rd5+20];
	ld.global.f32 	%f13, [%rd5+24];
	.loc	1 213 26
	.loc	4 414 3, function_name $L__info_string4, inlined_at 1 213 26
	ld.global.f32 	%f14, [%rd5];
	fma.rn.ftz.f32 	%f15, %f11, %f10, %f14;
	ld.global.f32 	%f16, [%rd5+4];
	fma.rn.ftz.f32 	%f17, %f12, %f10, %f16;
	ld.global.f32 	%f18, [%rd5+8];
	fma.rn.ftz.f32 	%f19, %f13, %f10, %f18;
	.loc	1 213 26
	mul.wide.u32 	%rd8, %r1, 12;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.f32 	[%rd9], %f15;
	st.global.f32 	[%rd9+4], %f17;
	st.global.f32 	[%rd9+8], %f19;
	.loc	1 214 2
	ld.const.u64 	%rd10, [params+24];
	cvta.to.global.u64 	%rd11, %rd10;
	mul.wide.u32 	%rd12, %r1, 4;
	add.s64 	%rd13, %rd11, %rd12;
	st.global.u32 	[%rd13], %r8;
	.loc	1 215 1
	ret;

}
	// .globl	__raygen__rg_visibility_double
.visible .entry __raygen__rg_visibility_double()
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<20>;
	.reg .b32 	%r<117>;
	.reg .f64 	%fd<8>;
	.reg .b64 	%rd<18>;
	.loc	1 217 0


	.loc	1 220 20
	.loc	2 4665 5, function_name $L__info_string0, inlined_at 1 220 20
	// begin inline asm
	call (%r4), _optix_get_launch_index_x, ();
	// end inline asm
	.loc	2 4666 5, function_name $L__info_string0, inlined_at 1 220 20
	// begin inline asm
	call (%r5), _optix_get_launch_index_y, ();
	// end inline asm
	.loc	1 230 14
	ld.const.u64 	%rd4, [params+120];
	.loc	1 233 2
	cvta.to.global.u64 	%rd1, %rd4;
	ld.const.u32 	%r10, [params+144];
	mad.lo.s32 	%r11, %r10, %r5, %r4;
	mul.wide.u32 	%rd5, %r11, 8;
	add.s64 	%rd2, %rd1, %rd5;
	mov.u64 	%rd6, 9218868437227405312;
	st.global.u64 	[%rd2], %rd6;
	mul.lo.s32 	%r3, %r10, %r4;
	add.s32 	%r12, %r3, %r5;
	mul.wide.u32 	%rd7, %r12, 8;
	add.s64 	%rd3, %rd1, %rd7;
	st.global.u64 	[%rd3], %rd6;
	.loc	1 237 2
	setp.eq.s32 	%p1, %r4, %r5;
	@%p1 bra 	$L__BB1_3;
	bra.uni 	$L__BB1_1;

$L__BB1_3:
	.loc	1 240 3
	add.s32 	%r116, %r3, %r4;
	mul.wide.u32 	%rd15, %r116, 8;
	add.s64 	%rd16, %rd1, %rd15;
	mov.u64 	%rd17, 0;
	st.global.u64 	[%rd16], %rd17;
	bra.uni 	$L__BB1_4;

$L__BB1_1:
	.loc	1 245 11
	ld.const.u64 	%rd9, [params+128];
	cvta.to.global.u64 	%rd10, %rd9;
	mul.wide.u32 	%rd11, %r5, 12;
	add.s64 	%rd12, %rd10, %rd11;
	mul.wide.u32 	%rd13, %r4, 12;
	add.s64 	%rd14, %rd10, %rd13;
	ld.global.f32 	%f1, [%rd14];
	ld.global.f32 	%f10, [%rd12];
	sub.ftz.f32 	%f11, %f10, %f1;
	cvt.ftz.f64.f32 	%fd2, %f11;
	.loc	1 246 11
	ld.global.f32 	%f2, [%rd14+4];
	ld.global.f32 	%f12, [%rd12+4];
	sub.ftz.f32 	%f13, %f12, %f2;
	cvt.ftz.f64.f32 	%fd3, %f13;
	.loc	1 247 11
	ld.global.f32 	%f3, [%rd14+8];
	ld.global.f32 	%f14, [%rd12+8];
	sub.ftz.f32 	%f15, %f14, %f3;
	cvt.ftz.f64.f32 	%fd4, %f15;
	.loc	1 249 16
	mul.f64 	%fd5, %fd3, %fd3;
	fma.rn.f64 	%fd6, %fd2, %fd2, %fd5;
	fma.rn.f64 	%fd7, %fd4, %fd4, %fd6;
	.loc	1 249 18
	sqrt.rn.f64 	%fd1, %fd7;
	.loc	1 250 15
	.loc	4 547 31, function_name $L__info_string5, inlined_at 1 250 15
	.loc	4 529 3, function_name $L__info_string6, inlined_at 4 547 31
	mul.ftz.f32 	%f16, %f13, %f13;
	fma.rn.ftz.f32 	%f17, %f11, %f11, %f16;
	fma.rn.ftz.f32 	%f18, %f15, %f15, %f17;
	.loc	4 547 25, function_name $L__info_string5, inlined_at 1 250 15
	rsqrt.approx.ftz.f32 	%f19, %f18;
	.loc	4 548 10, function_name $L__info_string5, inlined_at 1 250 15
	.loc	4 460 3, function_name $L__info_string3, inlined_at 4 548 10
	mul.ftz.f32 	%f4, %f11, %f19;
	mul.ftz.f32 	%f5, %f13, %f19;
	mul.ftz.f32 	%f6, %f15, %f19;
	.loc	1 252 2
	ld.const.u64 	%rd8, [params];
	cvt.rn.ftz.f32.f64 	%f8, %fd1;
	.loc	1 252 2
	.loc	2 221 5, function_name $L__info_string1, inlined_at 1 252 2
	mov.f32 	%f9, 0f00000000;
	mov.u32 	%r46, 255;
	mov.u32 	%r49, 1;
	mov.u32 	%r50, 0;
	mov.u32 	%r51, 4;
	// begin inline asm
	call(%r13,%r14,%r15,%r16,%r17,%r18,%r19,%r20,%r21,%r22,%r23,%r24,%r25,%r26,%r27,%r28,%r29,%r30,%r31,%r32,%r33,%r34,%r35,%r36,%r37,%r38,%r39,%r40,%r41,%r42,%r43,%r44),_optix_trace_typed_32,(%r50,%rd8,%f1,%f2,%f3,%f4,%f5,%f6,%f9,%f8,%f9,%r46,%r50,%r50,%r49,%r50,%r51,%r84,%r85,%r86,%r87,%r88,%r89,%r90,%r91,%r92,%r93,%r94,%r95,%r96,%r97,%r98,%r99,%r100,%r101,%r102,%r103,%r104,%r105,%r106,%r107,%r108,%r109,%r110,%r111,%r112,%r113,%r114,%r115);
	// end inline asm
	.loc	1 268 2
	setp.ne.s32 	%p2, %r14, -1;
	@%p2 bra 	$L__BB1_4;

	.loc	1 271 3
	st.global.f64 	[%rd2], %fd1;
	st.global.f64 	[%rd3], %fd1;

$L__BB1_4:
	.loc	1 287 1
	ret;

}
	// .globl	__raygen__rg_visibility_float
.visible .entry __raygen__rg_visibility_float()
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<24>;
	.reg .b32 	%r<119>;
	.reg .f64 	%fd<8>;
	.reg .b64 	%rd<19>;
	.loc	1 289 0


	.loc	1 292 20
	.loc	2 4665 5, function_name $L__info_string0, inlined_at 1 292 20
	// begin inline asm
	call (%r5), _optix_get_launch_index_x, ();
	// end inline asm
	.loc	2 4666 5, function_name $L__info_string0, inlined_at 1 292 20
	// begin inline asm
	call (%r6), _optix_get_launch_index_y, ();
	// end inline asm
	.loc	1 297 2
	ld.const.u32 	%r3, [params+100];
	setp.ge.u32 	%p1, %r5, %r3;
	setp.ge.u32 	%p2, %r6, %r3;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB2_5;

	.loc	1 300 14
	ld.const.u64 	%rd4, [params+112];
	.loc	1 304 2
	cvta.to.global.u64 	%rd1, %rd4;
	mad.lo.s32 	%r11, %r3, %r6, %r5;
	mul.wide.u32 	%rd5, %r11, 4;
	add.s64 	%rd2, %rd1, %rd5;
	mov.u32 	%r12, 2139095040;
	st.global.u32 	[%rd2], %r12;
	mul.lo.s32 	%r4, %r3, %r5;
	add.s32 	%r13, %r4, %r6;
	mul.wide.u32 	%rd6, %r13, 4;
	add.s64 	%rd3, %rd1, %rd6;
	st.global.u32 	[%rd3], %r12;
	.loc	1 314 2
	setp.eq.s32 	%p4, %r5, %r6;
	@%p4 bra 	$L__BB2_4;
	bra.uni 	$L__BB2_2;

$L__BB2_4:
	.loc	1 316 3
	add.s32 	%r117, %r4, %r5;
	mul.wide.u32 	%rd17, %r117, 4;
	add.s64 	%rd18, %rd1, %rd17;
	mov.u32 	%r118, 0;
	st.global.u32 	[%rd18], %r118;
	bra.uni 	$L__BB2_5;

$L__BB2_2:
	.loc	1 325 11
	ld.const.u64 	%rd8, [params+32];
	cvta.to.global.u64 	%rd9, %rd8;
	mul.wide.u32 	%rd10, %r6, 12;
	add.s64 	%rd11, %rd9, %rd10;
	mul.wide.u32 	%rd12, %r5, 12;
	add.s64 	%rd13, %rd9, %rd12;
	ld.global.f32 	%f11, [%rd13];
	ld.global.f32 	%f12, [%rd11];
	sub.ftz.f32 	%f13, %f12, %f11;
	cvt.ftz.f64.f32 	%fd1, %f13;
	.loc	1 326 11
	ld.global.f32 	%f14, [%rd13+4];
	ld.global.f32 	%f15, [%rd11+4];
	sub.ftz.f32 	%f16, %f15, %f14;
	cvt.ftz.f64.f32 	%fd2, %f16;
	.loc	1 327 11
	ld.global.f32 	%f17, [%rd13+8];
	ld.global.f32 	%f18, [%rd11+8];
	sub.ftz.f32 	%f19, %f18, %f17;
	cvt.ftz.f64.f32 	%fd3, %f19;
	.loc	1 329 16
	mul.f64 	%fd4, %fd2, %fd2;
	fma.rn.f64 	%fd5, %fd1, %fd1, %fd4;
	fma.rn.f64 	%fd6, %fd3, %fd3, %fd5;
	.loc	1 329 18
	sqrt.rn.f64 	%fd7, %fd6;
	.loc	1 330 15
	.loc	4 547 31, function_name $L__info_string5, inlined_at 1 330 15
	.loc	4 529 3, function_name $L__info_string6, inlined_at 4 547 31
	mul.ftz.f32 	%f20, %f16, %f16;
	fma.rn.ftz.f32 	%f21, %f13, %f13, %f20;
	fma.rn.ftz.f32 	%f22, %f19, %f19, %f21;
	.loc	4 547 25, function_name $L__info_string5, inlined_at 1 330 15
	rsqrt.approx.ftz.f32 	%f23, %f22;
	.loc	4 548 10, function_name $L__info_string5, inlined_at 1 330 15
	.loc	4 460 3, function_name $L__info_string3, inlined_at 4 548 10
	mul.ftz.f32 	%f5, %f13, %f23;
	mul.ftz.f32 	%f6, %f16, %f23;
	mul.ftz.f32 	%f7, %f19, %f23;
	.loc	1 332 2
	ld.const.u64 	%rd7, [params];
	ld.const.u64 	%rd14, [params+128];
	cvta.to.global.u64 	%rd15, %rd14;
	add.s64 	%rd16, %rd15, %rd12;
	ld.global.f32 	%f2, [%rd16];
	ld.global.f32 	%f3, [%rd16+4];
	ld.global.f32 	%f4, [%rd16+8];
	.loc	1 334 3
	cvt.rn.ftz.f32.f64 	%f9, %fd7;
	.loc	1 332 2
	.loc	2 221 5, function_name $L__info_string1, inlined_at 1 332 2
	mov.f32 	%f10, 0f00000000;
	mov.u32 	%r47, 255;
	mov.u32 	%r50, 1;
	mov.u32 	%r51, 0;
	mov.u32 	%r52, 4;
	// begin inline asm
	call(%r14,%r15,%r16,%r17,%r18,%r19,%r20,%r21,%r22,%r23,%r24,%r25,%r26,%r27,%r28,%r29,%r30,%r31,%r32,%r33,%r34,%r35,%r36,%r37,%r38,%r39,%r40,%r41,%r42,%r43,%r44,%r45),_optix_trace_typed_32,(%r51,%rd7,%f2,%f3,%f4,%f5,%f6,%f7,%f10,%f9,%f10,%r47,%r51,%r51,%r50,%r51,%r52,%r85,%r86,%r87,%r88,%r89,%r90,%r91,%r92,%r93,%r94,%r95,%r96,%r97,%r98,%r99,%r100,%r101,%r102,%r103,%r104,%r105,%r106,%r107,%r108,%r109,%r110,%r111,%r112,%r113,%r114,%r115,%r116);
	// end inline asm
	.loc	1 348 2
	setp.ne.s32 	%p5, %r15, -1;
	@%p5 bra 	$L__BB2_5;

	.loc	1 350 3
	st.global.f32 	[%rd2], %f9;
	st.global.f32 	[%rd3], %f9;

$L__BB2_5:
	.loc	1 370 1
	ret;

}
	// .globl	__raygen__rg_visibility_grid_to_grid_double
.visible .entry __raygen__rg_visibility_grid_to_grid_double()
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<20>;
	.reg .b32 	%r<117>;
	.reg .f64 	%fd<8>;
	.reg .b64 	%rd<15>;
	.loc	1 372 0


	.loc	1 375 20
	.loc	2 4665 5, function_name $L__info_string0, inlined_at 1 375 20
	// begin inline asm
	call (%r4), _optix_get_launch_index_x, ();
	// end inline asm
	.loc	2 4666 5, function_name $L__info_string0, inlined_at 1 375 20
	// begin inline asm
	call (%r5), _optix_get_launch_index_y, ();
	// end inline asm
	.loc	1 380 2
	ld.const.v2.u32 	{%r10, %r11}, [params+144];
	setp.ge.u32 	%p1, %r4, %r10;
	setp.ge.u32 	%p2, %r5, %r11;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB3_3;

	.loc	1 383 14
	ld.const.u64 	%rd3, [params+120];
	.loc	1 386 2
	cvta.to.global.u64 	%rd4, %rd3;
	mad.lo.s32 	%r84, %r11, %r4, %r5;
	mul.wide.u32 	%rd5, %r84, 8;
	add.s64 	%rd1, %rd4, %rd5;
	mov.u64 	%rd6, 9218868437227405312;
	st.global.u64 	[%rd1], %rd6;
	.loc	1 389 11
	ld.const.u64 	%rd7, [params+136];
	cvta.to.global.u64 	%rd8, %rd7;
	mul.wide.u32 	%rd9, %r5, 12;
	add.s64 	%rd10, %rd8, %rd9;
	ld.const.u64 	%rd11, [params+128];
	cvta.to.global.u64 	%rd12, %rd11;
	mul.wide.u32 	%rd13, %r4, 12;
	add.s64 	%rd14, %rd12, %rd13;
	ld.global.f32 	%f1, [%rd14];
	ld.global.f32 	%f10, [%rd10];
	sub.ftz.f32 	%f11, %f10, %f1;
	cvt.ftz.f64.f32 	%fd2, %f11;
	.loc	1 390 11
	ld.global.f32 	%f2, [%rd14+4];
	ld.global.f32 	%f12, [%rd10+4];
	sub.ftz.f32 	%f13, %f12, %f2;
	cvt.ftz.f64.f32 	%fd3, %f13;
	.loc	1 391 11
	ld.global.f32 	%f3, [%rd14+8];
	ld.global.f32 	%f14, [%rd10+8];
	sub.ftz.f32 	%f15, %f14, %f3;
	cvt.ftz.f64.f32 	%fd4, %f15;
	.loc	1 393 16
	mul.f64 	%fd5, %fd3, %fd3;
	fma.rn.f64 	%fd6, %fd2, %fd2, %fd5;
	fma.rn.f64 	%fd7, %fd4, %fd4, %fd6;
	.loc	1 393 18
	sqrt.rn.f64 	%fd1, %fd7;
	.loc	1 394 15
	.loc	4 547 31, function_name $L__info_string5, inlined_at 1 394 15
	.loc	4 529 3, function_name $L__info_string6, inlined_at 4 547 31
	mul.ftz.f32 	%f16, %f13, %f13;
	fma.rn.ftz.f32 	%f17, %f11, %f11, %f16;
	fma.rn.ftz.f32 	%f18, %f15, %f15, %f17;
	.loc	4 547 25, function_name $L__info_string5, inlined_at 1 394 15
	rsqrt.approx.ftz.f32 	%f19, %f18;
	.loc	4 548 10, function_name $L__info_string5, inlined_at 1 394 15
	.loc	4 460 3, function_name $L__info_string3, inlined_at 4 548 10
	mul.ftz.f32 	%f4, %f11, %f19;
	mul.ftz.f32 	%f5, %f13, %f19;
	mul.ftz.f32 	%f6, %f15, %f19;
	.loc	1 396 2
	ld.const.u64 	%rd2, [params];
	.loc	1 398 3
	cvt.rn.ftz.f32.f64 	%f8, %fd1;
	.loc	1 396 2
	.loc	2 221 5, function_name $L__info_string1, inlined_at 1 396 2
	mov.f32 	%f9, 0f00000000;
	mov.u32 	%r46, 255;
	mov.u32 	%r49, 1;
	mov.u32 	%r50, 0;
	mov.u32 	%r51, 4;
	// begin inline asm
	call(%r13,%r14,%r15,%r16,%r17,%r18,%r19,%r20,%r21,%r22,%r23,%r24,%r25,%r26,%r27,%r28,%r29,%r30,%r31,%r32,%r33,%r34,%r35,%r36,%r37,%r38,%r39,%r40,%r41,%r42,%r43,%r44),_optix_trace_typed_32,(%r50,%rd2,%f1,%f2,%f3,%f4,%f5,%f6,%f9,%f8,%f9,%r46,%r50,%r50,%r49,%r50,%r51,%r85,%r86,%r87,%r88,%r89,%r90,%r91,%r92,%r93,%r94,%r95,%r96,%r97,%r98,%r99,%r100,%r101,%r102,%r103,%r104,%r105,%r106,%r107,%r108,%r109,%r110,%r111,%r112,%r113,%r114,%r115,%r116);
	// end inline asm
	.loc	1 412 2
	setp.ne.s32 	%p4, %r14, -1;
	@%p4 bra 	$L__BB3_3;

	.loc	1 415 3
	st.global.f64 	[%rd1], %fd1;

$L__BB3_3:
	.loc	1 417 1
	ret;

}
	// .globl	__raygen__rg_visibility_grid_to_grid_float
.visible .entry __raygen__rg_visibility_grid_to_grid_float()
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<21>;
	.reg .b32 	%r<118>;
	.reg .f64 	%fd<8>;
	.reg .b64 	%rd<14>;
	.loc	1 419 0


	.loc	1 422 20
	.loc	2 4665 5, function_name $L__info_string0, inlined_at 1 422 20
	// begin inline asm
	call (%r4), _optix_get_launch_index_x, ();
	// end inline asm
	.loc	2 4666 5, function_name $L__info_string0, inlined_at 1 422 20
	// begin inline asm
	call (%r5), _optix_get_launch_index_y, ();
	// end inline asm
	.loc	1 427 2
	ld.const.v2.u32 	{%r10, %r11}, [params+144];
	setp.ge.u32 	%p1, %r4, %r10;
	setp.ge.u32 	%p2, %r5, %r11;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB4_3;

	.loc	1 430 14
	ld.const.u64 	%rd3, [params+112];
	.loc	1 433 2
	cvta.to.global.u64 	%rd4, %rd3;
	mad.lo.s32 	%r84, %r11, %r4, %r5;
	mul.wide.u32 	%rd5, %r84, 4;
	add.s64 	%rd1, %rd4, %rd5;
	mov.u32 	%r85, 2139095040;
	st.global.u32 	[%rd1], %r85;
	.loc	1 436 11
	ld.const.u64 	%rd6, [params+136];
	cvta.to.global.u64 	%rd7, %rd6;
	mul.wide.u32 	%rd8, %r5, 12;
	add.s64 	%rd9, %rd7, %rd8;
	ld.const.u64 	%rd10, [params+128];
	cvta.to.global.u64 	%rd11, %rd10;
	mul.wide.u32 	%rd12, %r4, 12;
	add.s64 	%rd13, %rd11, %rd12;
	ld.global.f32 	%f2, [%rd13];
	ld.global.f32 	%f11, [%rd9];
	sub.ftz.f32 	%f12, %f11, %f2;
	cvt.ftz.f64.f32 	%fd1, %f12;
	.loc	1 437 11
	ld.global.f32 	%f3, [%rd13+4];
	ld.global.f32 	%f13, [%rd9+4];
	sub.ftz.f32 	%f14, %f13, %f3;
	cvt.ftz.f64.f32 	%fd2, %f14;
	.loc	1 438 11
	ld.global.f32 	%f4, [%rd13+8];
	ld.global.f32 	%f15, [%rd9+8];
	sub.ftz.f32 	%f16, %f15, %f4;
	cvt.ftz.f64.f32 	%fd3, %f16;
	.loc	1 440 16
	mul.f64 	%fd4, %fd2, %fd2;
	fma.rn.f64 	%fd5, %fd1, %fd1, %fd4;
	fma.rn.f64 	%fd6, %fd3, %fd3, %fd5;
	.loc	1 440 18
	sqrt.rn.f64 	%fd7, %fd6;
	.loc	1 441 15
	.loc	4 547 31, function_name $L__info_string5, inlined_at 1 441 15
	.loc	4 529 3, function_name $L__info_string6, inlined_at 4 547 31
	mul.ftz.f32 	%f17, %f14, %f14;
	fma.rn.ftz.f32 	%f18, %f12, %f12, %f17;
	fma.rn.ftz.f32 	%f19, %f16, %f16, %f18;
	.loc	4 547 25, function_name $L__info_string5, inlined_at 1 441 15
	rsqrt.approx.ftz.f32 	%f20, %f19;
	.loc	4 548 10, function_name $L__info_string5, inlined_at 1 441 15
	.loc	4 460 3, function_name $L__info_string3, inlined_at 4 548 10
	mul.ftz.f32 	%f5, %f12, %f20;
	mul.ftz.f32 	%f6, %f14, %f20;
	mul.ftz.f32 	%f7, %f16, %f20;
	.loc	1 443 2
	ld.const.u64 	%rd2, [params];
	.loc	1 445 3
	cvt.rn.ftz.f32.f64 	%f9, %fd7;
	.loc	1 443 2
	.loc	2 221 5, function_name $L__info_string1, inlined_at 1 443 2
	mov.f32 	%f10, 0f00000000;
	mov.u32 	%r46, 255;
	mov.u32 	%r49, 1;
	mov.u32 	%r50, 0;
	mov.u32 	%r51, 4;
	// begin inline asm
	call(%r13,%r14,%r15,%r16,%r17,%r18,%r19,%r20,%r21,%r22,%r23,%r24,%r25,%r26,%r27,%r28,%r29,%r30,%r31,%r32,%r33,%r34,%r35,%r36,%r37,%r38,%r39,%r40,%r41,%r42,%r43,%r44),_optix_trace_typed_32,(%r50,%rd2,%f2,%f3,%f4,%f5,%f6,%f7,%f10,%f9,%f10,%r46,%r50,%r50,%r49,%r50,%r51,%r86,%r87,%r88,%r89,%r90,%r91,%r92,%r93,%r94,%r95,%r96,%r97,%r98,%r99,%r100,%r101,%r102,%r103,%r104,%r105,%r106,%r107,%r108,%r109,%r110,%r111,%r112,%r113,%r114,%r115,%r116,%r117);
	// end inline asm
	.loc	1 459 2
	setp.ne.s32 	%p4, %r14, -1;
	@%p4 bra 	$L__BB4_3;

	.loc	1 462 3
	st.global.f32 	[%rd1], %f9;

$L__BB4_3:
	.loc	1 464 1
	ret;

}
	// .globl	__miss__ms
.visible .entry __miss__ms()
{
	.reg .f32 	%f<2>;
	.reg .b32 	%r<9>;
	.loc	1 466 0


	.loc	1 470 18
	.loc	2 4026 5, function_name $L__info_string7, inlined_at 1 470 18
	// begin inline asm
	call (%f1), _optix_get_ray_tmax, ();
	// end inline asm
	.loc	1 471 20
	.loc	3 132 10, function_name $L__info_string8, inlined_at 1 471 20
	mov.b32 	%r2, %f1;
	.loc	1 471 2
	.loc	2 3586 5, function_name $L__info_string9, inlined_at 1 471 2
	mov.u32 	%r1, 0;
	// begin inline asm
	call _optix_set_payload, (%r1, %r2);
	// end inline asm
	.loc	1 472 2
	.loc	2 3591 5, function_name $L__info_string10, inlined_at 1 472 2
	mov.u32 	%r3, 1;
	mov.u32 	%r8, -1;
	// begin inline asm
	call _optix_set_payload, (%r3, %r8);
	// end inline asm
	.loc	1 473 2
	.loc	2 3596 5, function_name $L__info_string11, inlined_at 1 473 2
	mov.u32 	%r5, 2;
	// begin inline asm
	call _optix_set_payload, (%r5, %r8);
	// end inline asm
	.loc	1 474 2
	.loc	2 3601 5, function_name $L__info_string12, inlined_at 1 474 2
	mov.u32 	%r7, 3;
	// begin inline asm
	call _optix_set_payload, (%r7, %r8);
	// end inline asm
	.loc	1 476 1
	ret;

}
	// .globl	__closesthit__ch
.visible .entry __closesthit__ch()
{
	.reg .f32 	%f<2>;
	.reg .b32 	%r<10>;
	.loc	1 479 0


	.loc	1 484 18
	.loc	2 4026 5, function_name $L__info_string7, inlined_at 1 484 18
	// begin inline asm
	call (%f1), _optix_get_ray_tmax, ();
	// end inline asm
	.loc	1 493 24
	.loc	3 132 10, function_name $L__info_string8, inlined_at 1 493 24
	mov.b32 	%r2, %f1;
	.loc	1 493 5
	.loc	2 3586 5, function_name $L__info_string9, inlined_at 1 493 5
	mov.u32 	%r1, 0;
	// begin inline asm
	call _optix_set_payload, (%r1, %r2);
	// end inline asm
	.loc	1 494 23
	.loc	2 4568 5, function_name $L__info_string13, inlined_at 1 494 23
	// begin inline asm
	call (%r3), _optix_read_primitive_idx, ();
	// end inline asm
	.loc	1 494 5
	.loc	2 3591 5, function_name $L__info_string10, inlined_at 1 494 5
	mov.u32 	%r4, 1;
	// begin inline asm
	call _optix_set_payload, (%r4, %r3);
	// end inline asm
	.loc	1 495 5
	.loc	2 3596 5, function_name $L__info_string11, inlined_at 1 495 5
	mov.u32 	%r6, 2;
	mov.u32 	%r9, 26;
	// begin inline asm
	call _optix_set_payload, (%r6, %r9);
	// end inline asm
	.loc	1 496 5
	.loc	2 3601 5, function_name $L__info_string12, inlined_at 1 496 5
	mov.u32 	%r8, 3;
	// begin inline asm
	call _optix_set_payload, (%r8, %r9);
	// end inline asm
	.loc	1 497 1
	ret;

}
	.file	1 "C:\\Users\\fesmc\\Documents\\Projects\\5. SpatialAnalysisLibO7C11\\cudasrcChange\\optixRaycasting\\Raycasting.cu"
	.file	2 "c:\\users\\fesmc\\documents\\projects\\5. spatialanalysislibo7c11\\include\\internal/optix_7_device_impl.h"
	.file	3 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v11.6\\include\\crt\\device_functions.hpp"
	.file	4 "C:/Users/fesmc/Documents/Projects/5. SpatialAnalysisLibO7C11/cudasrcChange\\sutil/vec_math.h"
	.section	.debug_str
	{
$L__info_string0:
.b8 95,90,78,52,52,95,73,78,84,69,82,78,65,76,95,102,55,55,102,57,53,51,52,95,49,51,95,82,97,121,99,97,115,116,105,110,103,95,99,117
.b8 95,51,48,50,55,54,98,97,101,49,57,111,112,116,105,120,71,101,116,76,97,117,110,99,104,73,110,100,101,120,69,118,0
$L__info_string1:
.b8 95,90,78,52,52,95,73,78,84,69,82,78,65,76,95,102,55,55,102,57,53,51,52,95,49,51,95,82,97,121,99,97,115,116,105,110,103,95,99,117
.b8 95,51,48,50,55,54,98,97,101,49,48,111,112,116,105,120,84,114,97,99,101,69,121,54,102,108,111,97,116,51,83,48,95,102,102,102,106,106,106,106
.b8 106,82,106,83,49,95,83,49,95,83,49,95,0
$L__info_string2:
.b8 95,90,78,52,52,95,73,78,84,69,82,78,65,76,95,102,55,55,102,57,53,51,52,95,49,51,95,82,97,121,99,97,115,116,105,110,103,95,99,117
.b8 95,51,48,50,55,54,98,97,101,49,50,105,110,116,95,97,115,95,102,108,111,97,116,69,105,0
$L__info_string3:
.b8 95,90,109,108,82,75,54,102,108,111,97,116,51,102,0
$L__info_string4:
.b8 95,90,112,108,82,75,54,102,108,111,97,116,51,83,49,95,0
$L__info_string5:
.b8 95,90,57,110,111,114,109,97,108,105,122,101,82,75,54,102,108,111,97,116,51,0
$L__info_string6:
.b8 95,90,51,100,111,116,82,75,54,102,108,111,97,116,51,83,49,95,0
$L__info_string7:
.b8 95,90,78,52,52,95,73,78,84,69,82,78,65,76,95,102,55,55,102,57,53,51,52,95,49,51,95,82,97,121,99,97,115,116,105,110,103,95,99,117
.b8 95,51,48,50,55,54,98,97,101,49,53,111,112,116,105,120,71,101,116,82,97,121,84,109,97,120,69,118,0
$L__info_string8:
.b8 95,90,78,52,52,95,73,78,84,69,82,78,65,76,95,102,55,55,102,57,53,51,52,95,49,51,95,82,97,121,99,97,115,116,105,110,103,95,99,117
.b8 95,51,48,50,55,54,98,97,101,49,50,102,108,111,97,116,95,97,115,95,105,110,116,69,102,0
$L__info_string9:
.b8 95,90,78,52,52,95,73,78,84,69,82,78,65,76,95,102,55,55,102,57,53,51,52,95,49,51,95,82,97,121,99,97,115,116,105,110,103,95,99,117
.b8 95,51,48,50,55,54,98,97,101,49,55,111,112,116,105,120,83,101,116,80,97,121,108,111,97,100,95,48,69,106,0
$L__info_string10:
.b8 95,90,78,52,52,95,73,78,84,69,82,78,65,76,95,102,55,55,102,57,53,51,52,95,49,51,95,82,97,121,99,97,115,116,105,110,103,95,99,117
.b8 95,51,48,50,55,54,98,97,101,49,55,111,112,116,105,120,83,101,116,80,97,121,108,111,97,100,95,49,69,106,0
$L__info_string11:
.b8 95,90,78,52,52,95,73,78,84,69,82,78,65,76,95,102,55,55,102,57,53,51,52,95,49,51,95,82,97,121,99,97,115,116,105,110,103,95,99,117
.b8 95,51,48,50,55,54,98,97,101,49,55,111,112,116,105,120,83,101,116,80,97,121,108,111,97,100,95,50,69,106,0
$L__info_string12:
.b8 95,90,78,52,52,95,73,78,84,69,82,78,65,76,95,102,55,55,102,57,53,51,52,95,49,51,95,82,97,121,99,97,115,116,105,110,103,95,99,117
.b8 95,51,48,50,55,54,98,97,101,49,55,111,112,116,105,120,83,101,116,80,97,121,108,111,97,100,95,51,69,106,0
$L__info_string13:
.b8 95,90,78,52,52,95,73,78,84,69,82,78,65,76,95,102,55,55,102,57,53,51,52,95,49,51,95,82,97,121,99,97,115,116,105,110,103,95,99,117
.b8 95,51,48,50,55,54,98,97,101,50,50,111,112,116,105,120,71,101,116,80,114,105,109,105,116,105,118,101,73,110,100,101,120,69,118,0

	}
